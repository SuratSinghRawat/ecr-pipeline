pipeline{
    options {
        skipDefaultCheckout true
    }
    agent none
    environment{
        AWS_ACCOUNT_ID="211125636900"
        AWS_DEFAULT_REGION="ap-south-1"
        AWS_REPO_NAME="react-spring-mongo/${IMAGE_NAME}"
        IMAGE_NAME="reactapp"
        IMAGE_TAG="1"
        REPOSITORY_URL="211125636900.dkr.ecr.ap-south-1.amazonaws.com/${AWS_REPO_NAME}"
        
    }
    stages{
        stage("loggin in ECR Repo")
        {
          agent{ label 'jenkins-agent-sonar'}
          steps{
                script{
                    sh "aws ecr get-login-password --region ap-south-1| docker login --username AWS --password-stdin 211125636900.dkr.ecr.ap-south-1.amazonaws.com"
                }
          }

        }
        stage("git clone")
        {
            agent{ label 'jenkins-agent-sonar'}
            steps{
                git branch: 'main', url: 'https://github.com/SuratSinghRawat/ecr-pipeline.git'                

            }
        }
        stage("Push Image on ECR")
        {
            agent{ label 'jenkins-agent-sonar'}
            steps{
                sh '''
                docker tag reactapp:1 211125636900.dkr.ecr.ap-south-1.amazonaws.com/react-spring-mongo/reactapp:1
                docker push 211125636900.dkr.ecr.ap-south-1.amazonaws.com/react-spring-mongo/reactapp:1
                '''
            }
        }
        stage("Deploy Image on K8s server"){
            agent {label 'K8s-Master'}
            steps{
                script{
                    sh '''
                    aws ecr get-login-password --region ap-south-1| docker login --username AWS --password-stdin 211125636900.dkr.ecr.ap-south-1.amazonaws.com
                    docker pull ${REPOSITORY_URL}:${IMAGE_TAG}
                    docker tag  ${REPOSITORY_URL}:${IMAGE_TAG} ${IMAGE_NAME}:${IMAGE_TAG}
                    docker rmi ${REPOSITORY_URL}:${IMAGE_TAG}
                    docker run -d --name myreac-app -p 8088:8088 ${IMAGE_NAME}:${IMAGE_TAG}
                    '''
                }
            }
        }
        stage("Helm deploy"){
            steps{
                script{
                    sh "helm upgrade myreactapp --install /var/helmchart/reactapp"
                }
            }
        }
    }

}